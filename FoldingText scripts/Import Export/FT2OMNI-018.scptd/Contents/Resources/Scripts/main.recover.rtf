{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fnil\fcharset0 Verdana;}
{\colortbl;\red255\green255\blue255;\red37\green17\blue79;\red0\green0\blue0;\red0\green0\blue255;
\red61\green124\blue2;\red74\green30\blue127;\red0\green22\blue176;\red38\green18\blue82;\red108\green5\blue211;
}
\deftab480
\pard\pardeftab480\slleading20\pardirnatural

\f0\i\fs24 \cf2 -- Copyright (C) 2012 Robin Trew
\i0 \cf3 \
\pard\pardeftab480\slleading20\pardirnatural

\i \cf2 --
\i0 \cf3 \

\i \cf2 -- Permission is hereby granted, free of charge, 
\i0 \cf3 \

\i \cf2 -- to any person obtaining a copy of this software 
\i0 \cf3 \

\i \cf2 -- and associated documentation files (the "Software"), 
\i0 \cf3 \

\i \cf2 -- to deal in the Software without restriction, 
\i0 \cf3 \

\i \cf2 -- including without limitation the rights to use, copy, 
\i0 \cf3 \

\i \cf2 -- modify, merge, publish, distribute, sublicense, 
\i0 \cf3 \

\i \cf2 -- and/or sell copies of the Software, and to permit persons 
\i0 \cf3 \

\i \cf2 -- to whom the Software is furnished to do so, 
\i0 \cf3 \

\i \cf2 -- subject to the following conditions:
\i0 \cf3 \
\

\i \cf2 -- *******
\i0 \cf3 \

\i \cf2 -- The above copyright notice and this permission notice 
\i0 \cf3 \

\i \cf2 -- shall be included in ALL copies 
\i0 \cf3 \

\i \cf2 -- or substantial portions of the Software.
\i0 \cf3 \

\i \cf2 -- *******
\i0 \cf3 \
\

\i \cf2 -- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, 
\i0 \cf3 \

\i \cf2 -- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES 
\i0 \cf3 \

\i \cf2 -- OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. 
\i0 \cf3 \

\i \cf2 -- IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
\i0 \cf3 \

\i \cf2 -- DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, 
\i0 \cf3 \

\i \cf2 -- TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
\i0 \cf3 \

\i \cf2 -- OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\i0 \cf3 \
\

\i \cf2 -- Ver 0.14 adds basic OPML export (Interim \'96 pending release of the new API - doesn't yet export tags and their values as attributes.)
\i0 \cf3 \

\i \cf2 -- Ver 0.15 first pass of amendment for the new scripting syntax of FoldingText 1.1 Dev
\i0 \cf3 \
\
\cf4 property\cf3  \cf5 pTitle\cf3  : "Export from FoldingText"\
\cf4 property\cf3  \cf5 pVer\cf3  : "0.18"\
\cf4 property\cf3  \cf5 pAuthor\cf3  : "Robin Trew"\
\cf4 property\cf3  \cf5 pSite\cf3  : "Originally published on http://forums.omnigroup.com"\
\
\cf4 property\cf3  \cf5 pblnSkipDone\cf3  : \cf6 true\cf3  
\i \cf2 --  Don't export any lines tagged @done (and skip their descendants too)
\i0 \cf3 \
\
\cf4 property\cf3  \cf5 pOutFolder\cf3  : (
\b \cf7 path to
\b0 \cf3  \cf8 desktop\cf3 ) 
\i \cf2 -- set this to "" to default to the .ft file's folder
\i0 \cf3 \
\
\cf4 property\cf3  \cf5 plngOFOC\cf3  : 0 
\i \cf2 -- OmniFocus
\i0 \cf3 \
\cf4 property\cf3  \cf5 plngOOut\cf3  : 1 
\i \cf2 -- OmniOutliner
\i0 \cf3 \
\cf4 property\cf3  \cf5 plngOGfl\cf3  : 2 
\i \cf2 -- OmniGraffle
\i0 \cf3 \
\cf4 property\cf3  \cf5 plngOPML\cf3  : 3 
\i \cf2 -- OPML
\i0 \cf3 \
\
\cf4 property\cf3  \cf5 pstrOFOC\cf3  : "OFOC"\
\cf4 property\cf3  \cf5 pstrOOut\cf3  : "OOut"\
\cf4 property\cf3  \cf5 pstrOGfl\cf3  : "OGfl"\
\
\cf4 property\cf3  \cf5 pstrFocus\cf3  : "OmniFocus"\
\cf4 property\cf3  \cf5 pstrOutliner\cf3  : "OmniOutliner"\
\cf4 property\cf3  \cf5 pstrGraffle\cf3  : "OmniGraffle"\
\cf4 property\cf3  \cf5 pstrOPML\cf3  : "OPML"\
\
\cf4 property\cf3  \cf5 plstOFOC\cf3  : \{\cf5 pstrOFOC\cf3 , \cf5 pstrFocus\cf3 \}\
\cf4 property\cf3  \cf5 plstOOut\cf3  : \{\cf5 pstrOOut\cf3 , \cf5 pstrOutliner\cf3 \}\
\cf4 property\cf3  \cf5 plstOGfl\cf3  : \{\cf5 pstrOGfl\cf3 , \cf5 pstrGraffle\cf3 \}\
\
\cf4 property\cf3  \cf5 pstrOFScript\cf3  : "Tree2OF.scpt"\
\cf4 property\cf3  \cf5 pstrOGScript\cf3  : "Tree2OG.scpt"\
\cf4 property\cf3  \cf5 pstrOOScript\cf3  : "Tree2OO.scpt"\
\
\cf4 property\cf3  \cf5 pblnMenu\cf3  : \cf6 true\cf3  
\i \cf2 -- IF FALSE, SKIPS MENU AND EXPORTS TO APP indicated by plngTarget (below)
\i0 \cf3 \
\cf4 property\cf3  \cf5 plngTarget\cf3  : \cf5 plngOOut\cf3 \
\

\i \cf2 -- OmniGraffle
\i0 \cf3 \
\cf4 property\cf3  \cf5 pstrTemplate\cf3  : "Blank" 
\i \cf2 -- edit to the name of your preferred OG template
\i0 \cf3 \
\
\cf4 property\cf3  \cf5 pstrChildren\cf3  : "/*" 
\i \cf2 -- In the XPath-modelled FoldingText query engine
\i0 \cf3 \
\

\i \cf2 -- OPML
\i0 \cf3 \
\cf4 property\cf3  \cf5 pOPMLHeadToExpand\cf3  : "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\
<opml version=\\"1.0\\">\
	<head>\
	<title>Selected FoldingText Node and SubTree</title>\
	<expansionState>"\
\cf4 property\cf3  \cf5 pOPMLHeadFromExpand\cf3  : "</expansionState>\
	</head>\
	<body>\
 	"\
\cf4 property\cf3  \cf5 pOPMLTail\cf3  : "\
	</body>\
</opml>"\
\cf4 property\cf3  \cf5 pNodeStart\cf3  : "<outline "\
\cf4 property\cf3  \cf5 pLeafClose\cf3  : "/>"\
\cf4 property\cf3  \cf5 pParentClose\cf3  : "</outline>"\
\

\i \cf2 -- EXPORTS FROM FoldingText (www.foldingtext.com) to OmniFocus
\i0 \cf3 \

\i \cf2 -- Exports the first selected line in FoldingText, 
\i0 \cf3 \

\i \cf2 -- and the whole subtree of that line, to OmniFocus.
\i0 \cf3 \
\

\i \cf2 -- .TODO (the FoldingText tag)
\i0 \cf3 \

\i \cf2 -- If any of the lines in the subtree end in the special 
\i0 \cf3 \

\i \cf2 -- FoldingText tag ".todo" the *first* such line will be
\i0 \cf3 \

\i \cf2 -- interpreted as corresponding to an OmniFocus project.
\i0 \cf3 \

\i \cf2 -- Any ancestors of that line will be treated as nested folders.
\i0 \cf3 \

\i \cf2 -- Any descendants of that line will be treated as nested tasks.
\i0 \cf3 \
\

\i \cf2 -- If the subtree contains no .todo tags, the first selected line
\i0 \cf3 \

\i \cf2 -- will be exported as an OmniFocus project
\i0 \cf3 \
\

\i \cf2 -- UPDATING EXISTING FOLDERS, PROJECTS, TASKS
\i0 \cf3 \

\i \cf2 -- At every level of export, the script checks for existing 
\i0 \cf3 \

\i \cf2 -- folders, projects, and tasks of the same name.
\i0 \cf3 \

\i \cf2 -- Duplicates are not created, but any additional children 
\i0 \cf3 \

\i \cf2 -- be added.
\i0 \cf3 \
\

\i \cf2 -- NOTIFICATION OF RESULTS
\i0 \cf3 \

\i \cf2 -- If Growl is running the numbers of Folders|Projects|Tasks
\i0 \cf3 \

\i \cf2 -- that were found and/or created will be reported
\i0 \cf3 \

\i \cf2 -- either through Growl, if it is running,
\i0 \cf3 \

\i \cf2 -- or through an Applescript dialog
\i0 \cf3 \
\
\cf4 on\cf3  
\b \cf4 run
\b0 \cf3  \{\}\
	
\i \cf2 -- GET THE SUBTREE OF THE FIRST LINE SELECTED IN FOLDING TEXT
\i0 \cf3 \
	
\i \cf2 -- AS A NESTED LIST, WITH A FLAG REPORTING ANY .todo FOUND IN THE TREE
\i0 \cf3 \
	\cf4 if\cf3  \cf5 IsDev\cf3 () \cf4 then\cf3 \
		\cf4 set\cf3  \cf5 lstTree\cf3  \cf4 to\cf3  \cf5 GetFTSelnDev\cf3 ()\
	\cf4 else\cf3 \
		\cf4 set\cf3  \cf5 lstTree\cf3  \cf4 to\cf3  \cf5 GetFTSeln\cf3 ()\
	\cf4 end\cf3  \cf4 if\cf3 \
	\
	
\i \cf2 -- PLACE THE TREE IN OMNIFOCUS
\i0 \cf3 \
	
\i \cf2 -- PROJECT LEVEL: the level of the first .todo tag in FT
\i0 \cf3 \
	
\i \cf2 -- OR in the absence of a .todo, the first line of the tree
\i0 \cf3 \
	
\i \cf2 -- ANY LEVELS BEFORE THE PROJECT/.todo ARE TREATED AS NESTED FOLDERS
\i0 \cf3 \
	
\i \cf2 -- ANY LEVELS BELOW THE PROJECT/.todo ARE TREATED AS NESTED TASKS
\i0 \cf3 \
	\
	\cf4 if\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstTree\cf3  > 0 \cf4 then\cf3 \
		\cf4 set\cf3  \cf5 strRootText\cf3  \cf4 to\cf3  ""\
		\cf4 try\cf3 \
			\cf4 set\cf3  \cf5 strRootText\cf3  \cf4 to\cf3  "Subtree of " & \cf9 quoted form\cf3  \cf4 of\cf3  (\cf5 |text|\cf3  \cf4 of\cf3  
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstTree\cf3 )\
		\cf4 end\cf3  \cf4 try\cf3 \
		\
		\cf4 if\cf3  \cf5 pblnMenu\cf3  \cf4 then\cf3 \
			
\i \cf2 -- Build list of installed applications
\i0 \cf3 \
			\cf4 set\cf3  \cf5 lstMenu\cf3  \cf4 to\cf3  \{\}\
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oApp\cf3  \cf4 in\cf3  \{\cf5 plstOFOC\cf3 , \cf5 plstOOut\cf3 , \cf5 plstOGfl\cf3 \}\
				\cf4 set\cf3  \{\cf5 strAppCode\cf3 , \cf5 strAppName\cf3 \} \cf4 to\cf3  \cf9 contents\cf3  \cf4 of\cf3  \cf5 oApp\cf3 \
				\cf4 if\cf3  \cf5 IsInstalled\cf3 (\cf5 strAppCode\cf3 ) \cf4 then\cf3  \cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf5 lstMenu\cf3  \cf4 to\cf3  \cf5 strAppName\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 set\cf3  \cf4 end\cf3  \cf4 of\cf3  \cf5 lstMenu\cf3  \cf4 to\cf3  "OPML"\
			\
			\cf4 if\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstMenu\cf3  > 1 \cf4 then\cf3 \
				\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  \cf6 id\cf3  "syui"\
					
\b \cf4 activate
\b0 \cf3 \
					\cf4 set\cf3  \cf5 varChoice\cf3  \cf4 to\cf3  
\b \cf7 choose from list
\b0 \cf3  \cf5 lstMenu\cf3  \cf7 with title\cf3  \cf5 pTitle\cf3  & \cf9 tab\cf3  & \cf5 pVer\cf3  \cf7 with prompt\cf3  \'ac\
						"Export to:" \cf7 default items\cf3  
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstMenu\cf3  \'ac\
						\cf7 OK button name\cf3  "OK" \cf7 cancel button name\cf3  "Cancel" \cf4 with\cf3  \cf7 empty selection allowed\cf3  \cf4 without\cf3  \cf7 multiple selections allowed\cf3 \
				\cf4 end\cf3  \cf4 tell\cf3 \
				\cf4 if\cf3  \cf5 varChoice\cf3  = \cf6 false\cf3  \cf4 then\cf3  \cf4 return\cf3  
\i \cf4 missing value
\i0 \cf3 \
				\cf4 set\cf3  \cf5 varChoice\cf3  \cf4 to\cf3  
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 varChoice\cf3 \
			\cf4 else\cf3 \
				\cf4 set\cf3  \cf5 varChoice\cf3  \cf4 to\cf3  
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstMenu\cf3 \
			\cf4 end\cf3  \cf4 if\cf3 \
			\
			\cf4 if\cf3  \cf5 varChoice\cf3  = \cf5 pstrFocus\cf3  \cf4 then\cf3 \
				\cf5 FT2OF\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 varChoice\cf3  = \cf5 pstrOutliner\cf3  \cf4 then\cf3 \
				\cf5 FT2OO\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 varChoice\cf3  = \cf5 pstrGraffle\cf3  \cf4 then\cf3 \
				\cf5 FT2OG\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 varChoice\cf3  = \cf5 pstrOPML\cf3  \cf4 then\cf3 \
				\cf5 FT2OPML\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 else\cf3 \
			\cf4 if\cf3  \cf5 plngTarget\cf3  = \cf5 plngOFOC\cf3  \cf4 then\cf3 \
				\cf5 FT2OF\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 plngTarget\cf3  = \cf5 plngOOut\cf3  \cf4 then\cf3 \
				\cf5 FT2OO\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 plngTarget\cf3  = \cf5 plngOGfl\cf3  \cf4 then\cf3 \
				\cf5 FT2OG\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 else\cf3  \cf4 if\cf3  \cf5 plngTarget\cf3  = \cf5 plngOPML\cf3  \cf4 then\cf3 \
				\cf5 FT2OPML\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
			\cf4 end\cf3  \cf4 if\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
\cf4 end\cf3  
\b \cf4 run
\b0 \cf3 \
\
\cf4 on\cf3  \cf5 IsDev\cf3 ()\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 return\cf3  ((
\i \cf4 version
\i0 \cf3  \cf4 as\cf3  
\i \cf4 number
\i0 \cf3 ) > 1)\
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 IsDev\cf3 \
\
\cf4 on\cf3  \cf5 IsInstalled\cf3 (\cf5 strAppCode\cf3 )\
	\cf4 try\cf3 \
		\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "Finder" \cf4 to\cf3  \cf4 return\cf3  ((
\b \cf4 exists
\b0 \cf3  
\i \cf4 application file
\i0 \cf3  \cf6 id\cf3  \cf5 strAppCode\cf3 ) \uc0\u8800  "")\
	\cf4 on\cf3  \cf4 error\cf3 \
		\cf4 return\cf3  \cf6 false\cf3 \
	\cf4 end\cf3  \cf4 try\cf3 \
\cf4 end\cf3  \cf5 IsInstalled\cf3 \
\
\cf4 on\cf3  \cf5 FT2OF\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
	\cf4 set\cf3  \cf5 scriptOF\cf3  \cf4 to\cf3  
\b \cf7 load script
\b0 \cf3  \cf9 POSIX path\cf3  \cf4 of\cf3  (
\b \cf7 path to resource
\b0 \cf3  \cf5 pstrOFScript\cf3 ) \cf4 as\cf3  
\i \cf7 POSIX file
\i0 \cf3 \
	\cf5 scriptOF\cf3 's \cf5 Export2OF\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
\cf4 end\cf3  \cf5 FT2OF\cf3 \
\
\cf4 on\cf3  \cf5 FT2OO\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
	\cf4 set\cf3  \cf5 scriptOO\cf3  \cf4 to\cf3  
\b \cf7 load script
\b0 \cf3  \cf9 POSIX path\cf3  \cf4 of\cf3  (
\b \cf7 path to resource
\b0 \cf3  \cf5 pstrOOScript\cf3 ) \cf4 as\cf3  
\i \cf7 POSIX file
\i0 \cf3 \
	\cf5 scriptOO\cf3 's \cf5 Export2OO\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
\cf4 end\cf3  \cf5 FT2OO\cf3 \
\
\cf4 on\cf3  \cf5 FT2OG\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 )\
	\cf4 set\cf3  \cf5 scriptOG\cf3  \cf4 to\cf3  
\b \cf7 load script
\b0 \cf3  \cf9 POSIX path\cf3  \cf4 of\cf3  (
\b \cf7 path to resource
\b0 \cf3  \cf5 pstrOGScript\cf3 ) \cf4 as\cf3  
\i \cf7 POSIX file
\i0 \cf3 \
	\cf5 scriptOG\cf3 's \cf5 Export2OG\cf3 (\cf5 strRootText\cf3 , \cf5 lstTree\cf3 , \cf5 pstrTemplate\cf3 )\
\cf4 end\cf3  \cf5 FT2OG\cf3 \
\
\cf4 on\cf3  \cf5 FT2OPML\cf3 (\cf5 strRootText\cf3 , \cf5 lstNodes\cf3 )\
	\cf4 if\cf3  (\cf9 length\cf3  \cf4 of\cf3  \cf5 lstNodes\cf3  > 0) \cf4 then\cf3 \
		\
		\cf4 set\cf3  \{\cf5 lngIndex\cf3 , \cf5 strExpand\cf3 , \cf5 strOutline\cf3 \} \cf4 to\cf3  \cf4 my\cf3  \cf5 Nodes2OPML\cf3 (-1, \cf5 lstNodes\cf3 , \cf9 tab\cf3 )\
		\cf4 set\cf3  \cf5 strOPML\cf3  \cf4 to\cf3  \cf5 pOPMLHeadToExpand\cf3  & \cf5 strExpand\cf3  & \cf5 pOPMLHeadFromExpand\cf3  & \cf5 strOutline\cf3  & \cf5 pOPMLTail\cf3 \
		
\b \cf7 set the clipboard to
\b0 \cf3  \cf5 strOPML\cf3 \
		\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
			\cf4 try\cf3 \
				\cf4 tell\cf3  \cf4 front\cf3  
\i \cf4 document
\i0 \cf3 \
					\cf4 set\cf3  \{\cf5 strBaseName\cf3 , \cf5 strFTPath\cf3 \} \cf4 to\cf3  \{\cf9 name\cf3 , \cf9 POSIX path\cf3  \cf4 of\cf3  ((\cf4 its\cf3  
\i \cf4 file
\i0 \cf3 ) \cf4 as\cf3  
\i \cf4 alias
\i0 \cf3 )\}\
				\cf4 end\cf3  \cf4 tell\cf3 \
			\cf4 on\cf3  \cf4 error\cf3 \
				
\b \cf4 activate
\b0 \cf3 \
				
\b \cf7 display dialog
\b0 \cf3  "FoldingText file not yet saved: " & \cf9 return\cf3  & \cf9 return\cf3  & \'ac\
					"Save before exporting to OPML." \cf7 buttons\cf3  \{"OK"\} \cf7 default button\cf3  "OK" \cf7 with title\cf3  \cf5 pTitle\cf3  & "  ver. " & \cf5 pVer\cf3 \
				\cf4 return\cf3 \
			\cf4 end\cf3  \cf4 try\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
		\cf5 ChooseFilePathAndSave\cf3 (\cf5 strOPML\cf3 , \cf5 strFTPath\cf3 , \cf5 strBaseName\cf3 , "opml")\
		\cf4 return\cf3  \cf5 strOPML\cf3 \
	\cf4 end\cf3  \cf4 if\cf3 \
\cf4 end\cf3  \cf5 FT2OPML\cf3 \
\

\i \cf2 -- READING DATA FROM FOLDING TEXT
\i0 \cf3 \
\cf4 on\cf3  \cf5 GetFTSeln\cf3 ()\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 set\cf3  \cf5 lstDocs\cf3  \cf4 to\cf3  
\i \cf4 documents
\i0 \cf3 \
		\cf4 if\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstDocs\cf3  < 1 \cf4 then\cf3  \cf4 return\cf3  \{\}\
		\cf4 return\cf3  \cf4 my\cf3  \cf5 Expand\cf3 (
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstDocs\cf3 , \cf4 my\cf3  \cf5 SelectedFTRoots\cf3 ())\
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 GetFTSeln\cf3 \
\
\
\cf4 on\cf3  \cf5 GetFTSelnDev\cf3 ()\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 set\cf3  \cf5 lstDocs\cf3  \cf4 to\cf3  
\i \cf4 documents
\i0 \cf3 \
		\cf4 if\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstDocs\cf3  < 1 \cf4 then\cf3  \cf4 return\cf3  \{\}\
		\cf4 return\cf3  \cf4 my\cf3  \cf5 ExpandDev\cf3 (
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstDocs\cf3 , \cf4 my\cf3  \cf5 SelectedFTRootsDev\cf3 ())\
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 GetFTSelnDev\cf3 \
\
\cf4 on\cf3  \cf5 SelectedFTRootsDev\cf3 ()\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 tell\cf3  \cf4 front\cf3  
\i \cf4 document
\i0 \cf3 \
			
\i \cf2 -- WALK TOP DOWN LEFT RIGHT THROUGH THE SELECTED PARTS OF THE TREE
\i0 \cf3 \
			
\i \cf2 -- HARVESTING ONLY NODES WHOSE PARENTS HAVE YET TO BE SEEN
\i0 \cf3 \
			
\i \cf2 -- AND WHICH HAVE EITHER TEXT OR PROGENY
\i0 \cf3 \
			\cf4 try\cf3 \
				\cf4 set\cf3  \cf5 lstSeln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf4 at path\cf3  (\cf5 |nodePath|\cf3  \cf4 of\cf3  (
\b \cf4 read selection
\b0 \cf3  \cf4 it\cf3 ))\
			\cf4 on\cf3  \cf4 error\cf3 \
				\cf4 set\cf3  \cf5 lstSeln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf4 at path\cf3  "/@type!=empty"\
			\cf4 end\cf3  \cf4 try\cf3 \
			\
			\cf4 if\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstSeln\cf3  < 1 \cf4 then\cf3  \cf4 return\cf3  \{\}\
			\cf4 if\cf3  \cf5 |type|\cf3  \cf4 of\cf3  (
\i \cf4 item
\i0 \cf3  1 \cf4 of\cf3  \cf5 lstSeln\cf3 ) = "empty" \cf4 then\cf3 \
				
\b \cf7 display dialog
\b0 \cf3  "First selected line should contain text" \cf7 buttons\cf3  \{"OK"\} \cf7 default button\cf3  "OK" \cf7 with title\cf3  \cf5 pTitle\cf3  & "  ver. " & \cf5 pVer\cf3 \
				\cf4 return\cf3  \{\}\
			\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 set\cf3  \cf5 lstSofar\cf3  \cf4 to\cf3  []\
			\cf4 set\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  []\
			\
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oNode\cf3  \cf4 in\cf3  \cf5 lstSeln\cf3 \
				\cf4 set\cf3  \{\cf5 strID\cf3 , \cf5 strParentID\cf3 \} \cf4 to\cf3  \{\cf5 |id|\cf3 , \cf5 |parentID|\cf3 \} \cf4 of\cf3  \cf5 oNode\cf3 \
				\cf4 if\cf3  \cf5 lstSofar\cf3  \cf4 does not\cf3  \cf4 contain\cf3  \cf5 strParentID\cf3  \cf4 then\cf3 \
					\cf4 if\cf3  (\cf5 |type|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  \uc0\u8800  "empty") \cf4 then\cf3  \cf4 set\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  \cf5 lstParent\cf3  & \cf5 strID\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 set\cf3  \cf5 lstSofar\cf3  \cf4 to\cf3  \cf5 lstSofar\cf3  & \cf5 strID\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 i\cf3  \cf4 from\cf3  1 \cf4 to\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstParent\cf3 \
				\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  "//@id=" & 
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lstParent\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\
			
\i \cf2 -- TRANSLATE THE LIST OF IDS INTO A LIST OF NODE RECORDS
\i0 \cf3 \
			\cf4 set\cf3  \{\cf5 dlm\cf3 , \cf9 AppleScript\cf3 's \cf9 text item delimiters\cf3 \} \cf4 to\cf3  \{\cf9 AppleScript\cf3 's \cf9 text item delimiters\cf3 , " union "\}\
			\cf4 set\cf3  \cf5 lstRoot\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf4 at path\cf3  (\cf5 lstParent\cf3  \cf4 as\cf3  
\i \cf4 string
\i0 \cf3 )\
			\cf4 set\cf3  \cf4 my\cf3  \cf9 text item delimiters\cf3  \cf4 to\cf3  \cf5 dlm\cf3 \
			\
			\cf4 return\cf3  \cf5 lstRoot\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 SelectedFTRootsDev\cf3 \
\
\cf4 on\cf3  \cf5 SelectedFTRoots\cf3 ()\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 tell\cf3  \cf4 front\cf3  
\i \cf4 document
\i0 \cf3 \
			\cf4 set\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  []\
			\cf4 set\cf3  \cf5 lstSofar\cf3  \cf4 to\cf3  []\
			\
			
\i \cf2 -- WALK TOP DOWN LEFT RIGHT THROUGH THE SELECTED PARTS OF THE TREE
\i0 \cf3 \
			
\i \cf2 -- HARVESTING ONLY NODES WHOSE PARENTS HAVE YET TO BE SEEN
\i0 \cf3 \
			
\i \cf2 -- AND WHICH HAVE EITHER TEXT OR PROGENY
\i0 \cf3 \
			\cf4 set\cf3  \cf5 lstSeln\cf3  \cf4 to\cf3  
\b \cf4 DEPRECATED get nodes as records
\b0 \cf3  \cf4 path\cf3  \cf9 DEPRECATED selected nodes path\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oNode\cf3  \cf4 in\cf3  \cf5 lstSeln\cf3 \
				\cf4 set\cf3  \{\cf5 strID\cf3 , \cf5 strParentID\cf3 \} \cf4 to\cf3  \{\cf5 |id|\cf3 , \cf5 |parentID|\cf3 \} \cf4 of\cf3  \cf5 oNode\cf3 \
				\cf4 if\cf3  \cf5 lstSofar\cf3  \cf4 does not\cf3  \cf4 contain\cf3  \cf5 strParentID\cf3  \cf4 then\cf3 \
					\cf4 if\cf3  (\cf5 |type|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  \uc0\u8800  "empty") \cf4 or\cf3  \'ac\
						(
\b \cf4 DEPRECATED get nodes as records
\b0 \cf3  \cf4 it\cf3  \cf4 path\cf3  (\cf5 |path|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  & "/*")) \uc0\u8800  \{\} \cf4 then\cf3  \'ac\
						\cf4 set\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  \cf5 lstParent\cf3  & \cf5 strID\cf3 \
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 set\cf3  \cf5 lstSofar\cf3  \cf4 to\cf3  \cf5 lstSofar\cf3  & \cf5 strID\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 i\cf3  \cf4 from\cf3  1 \cf4 to\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lstParent\cf3 \
				\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lstParent\cf3  \cf4 to\cf3  "//@id=" & 
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lstParent\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\
			
\i \cf2 -- TRANSLATE THE LIST OF IDS INTO A LIST OF NODE RECORDS
\i0 \cf3 \
			\cf4 set\cf3  \{\cf5 dlm\cf3 , \cf9 AppleScript\cf3 's \cf9 text item delimiters\cf3 \} \cf4 to\cf3  \{\cf9 AppleScript\cf3 's \cf9 text item delimiters\cf3 , " union "\}\
			\cf4 set\cf3  \cf5 lstRoot\cf3  \cf4 to\cf3  
\b \cf4 DEPRECATED get nodes as records
\b0 \cf3  \cf4 path\cf3  (\cf5 lstParent\cf3  \cf4 as\cf3  
\i \cf4 string
\i0 \cf3 )\
			\cf4 set\cf3  \cf4 my\cf3  \cf9 text item delimiters\cf3  \cf4 to\cf3  \cf5 dlm\cf3 \
			\
			\cf4 return\cf3  \cf5 lstRoot\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 SelectedFTRoots\cf3 \
\

\i \cf2 -- GET A RECURSIVE CHILD LIST FOR EACH NODE IN THE LIST
\i0 \cf3 \
\cf4 on\cf3  \cf5 ExpandDev\cf3 (\cf5 oDoc\cf3 , \cf5 lst\cf3 )\
	\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  \cf6 false\cf3 \
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 tell\cf3  \cf5 oDoc\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 i\cf3  \cf4 from\cf3  1 \cf4 to\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lst\cf3 \
				
\i \cf2 -- READ THIS NODE AND CHECK FOR .topic STATUS
\i0 \cf3 \
				\cf4 set\cf3  \cf5 oNode\cf3  \cf4 to\cf3  \cf9 contents\cf3  \cf4 of\cf3  (
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3 )\
				\cf4 try\cf3 \
					\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  ((\cf5 mode\cf3  \cf4 of\cf3  \cf5 oNode\cf3 ) = "todo")\
				\cf4 end\cf3  \cf4 try\cf3 \
				\
				
\i \cf2 -- GET THE CHILDREN OF THIS NODE
\i0 \cf3 \
				\cf4 if\cf3  \cf5 pblnSkipDone\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf5 lstChiln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf4 at path\cf3  "(//@id=" & \cf5 |id|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  & "/@type!=empty) except (//@done)"\
				\cf4 else\cf3 \
					\cf4 set\cf3  \cf5 lstChiln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf4 at path\cf3  "//@id=" & \cf5 |id|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  & "/@type!=empty"\
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 if\cf3  \cf5 lstChiln\cf3  \uc0\u8800  \{\} \cf4 then\cf3 \
					
\i \cf2 -- GET THEIR SUB-TREES
\i0 \cf3 \
					\cf4 set\cf3  \cf5 lstSub\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 ExpandDev\cf3 (\cf5 oDoc\cf3 , \cf5 lstChiln\cf3 )\
					
\i \cf2 -- IF WE ARE STILL LOOKING,
\i0 \cf3 \
					
\i \cf2 -- HAS A .todo BEEN FOUND IN ANY OF THE SUB-TREES ?
\i0 \cf3 \
					\cf4 if\cf3  \cf4 not\cf3  \cf5 blnFound\cf3  \cf4 then\cf3 \
						\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oSub\cf3  \cf4 in\cf3  \cf5 lstSub\cf3 \
							\cf4 if\cf3  (
\i \cf4 item
\i0 \cf3  3 \cf4 of\cf3  \cf5 oSub\cf3 ) \cf4 then\cf3 \
								\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  \cf6 true\cf3 \
								\cf4 exit\cf3  \cf4 repeat\cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
						\cf4 end\cf3  \cf4 repeat\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3  \cf4 to\cf3  \{\cf5 oNode\cf3 , \cf5 lstSub\cf3 , \cf5 blnFound\cf3 \}\
				\cf4 else\cf3 \
					\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3  \cf4 to\cf3  \{\cf5 oNode\cf3 , \{\}, \cf5 blnFound\cf3 \}\
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 return\cf3  \cf5 lst\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 ExpandDev\cf3 \
\
\cf4 on\cf3  \cf5 Expand\cf3 (\cf5 oDoc\cf3 , \cf5 lst\cf3 )\
	\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  \cf6 false\cf3 \
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		\cf4 tell\cf3  \cf5 oDoc\cf3 \
			\cf4 repeat\cf3  \cf4 with\cf3  \cf5 i\cf3  \cf4 from\cf3  1 \cf4 to\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 lst\cf3 \
				
\i \cf2 -- READ THIS NODE AND CHECK FOR .topic STATUS
\i0 \cf3 \
				\cf4 set\cf3  \cf5 oNode\cf3  \cf4 to\cf3  \cf9 contents\cf3  \cf4 of\cf3  (
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3 )\
				\cf4 try\cf3 \
					\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  ((\cf5 mode\cf3  \cf4 of\cf3  \cf5 oNode\cf3 ) = "todo")\
				\cf4 end\cf3  \cf4 try\cf3 \
				\
				
\i \cf2 -- GET THE CHILDREN OF THIS NODE
\i0 \cf3 \
				\cf4 if\cf3  \cf5 pblnSkipDone\cf3  \cf4 then\cf3 \
					\cf4 set\cf3  \cf5 lstChiln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf5 oDoc\cf3  \cf4 at path\cf3  "//@id=" & \cf5 |id|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  & "/*"\
				\cf4 else\cf3 \
					\cf4 set\cf3  \cf5 lstChiln\cf3  \cf4 to\cf3  
\b \cf4 read nodes
\b0 \cf3  \cf5 oDoc\cf3  \cf4 at path\cf3  "//@id=" & \cf5 |id|\cf3  \cf4 of\cf3  \cf5 oNode\cf3  & "/*"\
				\cf4 end\cf3  \cf4 if\cf3 \
				\cf4 if\cf3  \cf5 lstChiln\cf3  \uc0\u8800  \{\} \cf4 then\cf3 \
					
\i \cf2 -- GET THEIR SUB-TREES
\i0 \cf3 \
					\cf4 set\cf3  \cf5 lstSub\cf3  \cf4 to\cf3  \cf4 my\cf3  \cf5 Expand\cf3 (\cf5 oDoc\cf3 , \cf5 lstChiln\cf3 )\
					
\i \cf2 -- IF WE ARE STILL LOOKING,
\i0 \cf3 \
					
\i \cf2 -- HAS A .todo BEEN FOUND IN ANY OF THE SUB-TREES ?
\i0 \cf3 \
					\cf4 if\cf3  \cf4 not\cf3  \cf5 blnFound\cf3  \cf4 then\cf3 \
						\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oSub\cf3  \cf4 in\cf3  \cf5 lstSub\cf3 \
							\cf4 if\cf3  (
\i \cf4 item
\i0 \cf3  3 \cf4 of\cf3  \cf5 oSub\cf3 ) \cf4 then\cf3 \
								\cf4 set\cf3  \cf5 blnFound\cf3  \cf4 to\cf3  \cf6 true\cf3 \
								\cf4 exit\cf3  \cf4 repeat\cf3 \
							\cf4 end\cf3  \cf4 if\cf3 \
						\cf4 end\cf3  \cf4 repeat\cf3 \
					\cf4 end\cf3  \cf4 if\cf3 \
					\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3  \cf4 to\cf3  \{\cf5 oNode\cf3 , \cf5 lstSub\cf3 , \cf5 blnFound\cf3 \}\
				\cf4 else\cf3 \
					\cf4 set\cf3  
\i \cf4 item
\i0 \cf3  \cf5 i\cf3  \cf4 of\cf3  \cf5 lst\cf3  \cf4 to\cf3  \{\cf5 oNode\cf3 , \{\}, \cf5 blnFound\cf3 \}\
				\cf4 end\cf3  \cf4 if\cf3 \
			\cf4 end\cf3  \cf4 repeat\cf3 \
			\cf4 return\cf3  \cf5 lst\cf3 \
		\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
\cf4 end\cf3  \cf5 Expand\cf3 \
\

\i \cf2 -- BUILD OPML
\i0 \cf3 \
\cf4 on\cf3  \cf5 Nodes2OPML\cf3 (\cf5 lngIndex\cf3 , \cf5 lstNodes\cf3 , \cf5 strIndent\cf3 )\
	\cf4 set\cf3  \{\cf5 strExpand\cf3 , \cf5 strOut\cf3 \} \cf4 to\cf3  \{"", ""\}\
	\cf4 repeat\cf3  \cf4 with\cf3  \cf5 oNode\cf3  \cf4 in\cf3  \cf5 lstNodes\cf3 \
		\cf4 set\cf3  \{\cf5 recNode\cf3 , \cf5 lstChiln\cf3 , \cf5 _\cf3 \} \cf4 to\cf3  \cf9 contents\cf3  \cf4 of\cf3  \cf5 oNode\cf3 \
		\cf4 set\cf3  \cf5 strText\cf3  \cf4 to\cf3  \cf5 |text|\cf3  \cf4 of\cf3  \cf5 recNode\cf3 \
		\
		\cf4 set\cf3  \cf5 strOut\cf3  \cf4 to\cf3  \cf5 strOut\cf3  & \cf5 pNodeStart\cf3  & "text=" & \'ac\
			(
\b \cf7 do shell script
\b0 \cf3  "python -c 'import sys; from xml.sax.saxutils import quoteattr; print quoteattr(sys.argv[1])' " & \'ac\
				\cf9 quoted form\cf3  \cf4 of\cf3  \cf5 strText\cf3 )\
		\
		\cf4 set\cf3  \cf5 lngIndex\cf3  \cf4 to\cf3  \cf5 lngIndex\cf3  + 1\
		\cf4 if\cf3  (\cf9 length\cf3  \cf4 of\cf3  \cf5 lstChiln\cf3  > 0) \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 strExpand\cf3  \cf4 to\cf3  \cf5 strExpand\cf3  & "," & (\cf5 lngIndex\cf3 ) \cf4 as\cf3  
\i \cf4 string
\i0 \cf3 \
			\cf4 set\cf3  \{\cf5 lngIndex\cf3 , \cf5 strSubExpand\cf3 , \cf5 strSubOutln\cf3 \} \cf4 to\cf3  \cf5 Nodes2OPML\cf3 (\cf5 lngIndex\cf3 , \cf5 lstChiln\cf3 , \cf5 strIndent\cf3  & \cf9 tab\cf3 )\
			\cf4 if\cf3  \cf5 strSubExpand\cf3  \uc0\u8800  "" \cf4 then\cf3  \cf4 set\cf3  \cf5 strExpand\cf3  \cf4 to\cf3  \cf5 strExpand\cf3  & "," & \cf5 strSubExpand\cf3 \
			\cf4 set\cf3  \cf5 strOut\cf3  \cf4 to\cf3  \cf5 strOut\cf3  & ">" & \cf9 return\cf3  & \'ac\
				\cf5 strIndent\cf3  & \cf5 strSubOutln\cf3  & \cf9 return\cf3  & \'ac\
				\cf5 strIndent\cf3  & \cf5 pParentClose\cf3 \
		\cf4 else\cf3 \
			\cf4 set\cf3  \cf5 strOut\cf3  \cf4 to\cf3  \cf5 strOut\cf3  & \cf5 pLeafClose\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 repeat\cf3 \
	\cf4 if\cf3  \cf5 strExpand\cf3  \cf4 begins with\cf3  "," \cf4 and\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 strExpand\cf3  > 1 \cf4 then\cf3  \cf4 set\cf3  \cf5 strExpand\cf3  \cf4 to\cf3  
\i \cf4 text
\i0 \cf3  2 \cf4 thru\cf3  -1 \cf4 of\cf3  \cf5 strExpand\cf3 \
	\cf4 return\cf3  \{\cf5 lngIndex\cf3 , \cf5 strExpand\cf3 , \cf5 strOut\cf3 \}\
\cf4 end\cf3  \cf5 Nodes2OPML\cf3 \
\
\cf4 on\cf3  \cf5 Attr\cf3 (\cf5 strName\cf3 , \cf5 strValue\cf3 )\
	\cf5 strName\cf3  & "=" & \cf5 EscapeChars\cf3 (\cf5 strValue\cf3 ) & \cf9 space\cf3 \
\cf4 end\cf3  \cf5 Attr\cf3 \
\
\cf4 on\cf3  \cf5 EscapeChars\cf3 (\cf5 str\cf3 )\
	
\i \cf2 -- QUOTE < > & ETC
\i0 \cf3 \
	\cf4 set\cf3  \cf5 strEncoded\cf3  \cf4 to\cf3  (
\b \cf7 do shell script
\b0 \cf3  "python -c 'import sys; from xml.sax.saxutils import quoteattr; print quoteattr(sys.argv[1])' " & \'ac\
		\cf9 quoted form\cf3  \cf4 of\cf3  \cf5 str\cf3 )\
	\
	
\i \cf2 ---- ENCODE DIACRITICS AND SPECIAL CHARACTERS
\i0 \cf3 \
	
\i \cf2 --set lstChars to characters of strEncoded
\i0 \cf3 \
	
\i \cf2 --repeat with i from 1 to length of lstChars
\i0 \cf3 \
	
\i \cf2 --	set lngCode to id of item i of lstChars
\i0 \cf3 \
	
\i \cf2 --	if lngCode > 127 then set item i of lstChars to ("&#" & lngCode as string) & ";"
\i0 \cf3 \
	
\i \cf2 --end repeat
\i0 \cf3 \
	
\i \cf2 --lstChars as Unicode text
\i0 \cf3 \
\cf4 end\cf3  \cf5 EscapeChars\cf3 \
\

\i \cf2 -- SAVE A STRING TO A TEXT FILE
\i0 \cf3 \
\cf4 on\cf3  \cf5 ChooseFilePathAndSave\cf3 (\cf5 strText\cf3 , \cf5 strPath\cf3 , \cf5 strBaseName\cf3 , \cf5 strExtn\cf3 )\
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "Finder"\
		
\i \cf2 -- OFFER A DEFAULT FOLDER (if a valid one is specified)
\i0 \cf3 \
		\cf4 if\cf3  
\b \cf4 exists
\b0 \cf3  \cf5 pOutFolder\cf3  \cf4 then\cf3 \
			\cf4 set\cf3  \cf5 strOutFolder\cf3  \cf4 to\cf3  \cf9 POSIX path\cf3  \cf4 of\cf3  \cf5 pOutFolder\cf3 \
		\cf4 else\cf3 \
			
\i \cf2 -- OR OFFER THE FOLDER CONTAINING THE .OO3 FILE
\i0 \cf3 \
			\cf4 set\cf3  \cf5 lngName\cf3  \cf4 to\cf3  \cf9 length\cf3  \cf4 of\cf3  \cf5 strBaseName\cf3 \
			\cf4 set\cf3  \cf5 strOutFolder\cf3  \cf4 to\cf3  
\i \cf4 text
\i0 \cf3  1 \cf4 thru\cf3  ((-\cf5 lngName\cf3 ) - 1) \cf4 of\cf3  \cf5 strPath\cf3 \
		\cf4 end\cf3  \cf4 if\cf3 \
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf4 set\cf3  \{\cf5 dlm\cf3 , \cf4 my\cf3  \cf9 text item delimiters\cf3 \} \cf4 to\cf3  \{\cf4 my\cf3  \cf9 text item delimiters\cf3 , "."\}\
	\cf4 set\cf3  \cf5 strStem\cf3  \cf4 to\cf3  \cf4 first\cf3  
\i \cf4 text item
\i0 \cf3  \cf4 of\cf3  \cf5 strBaseName\cf3 \
	\cf4 set\cf3  \cf4 my\cf3  \cf9 text item delimiters\cf3  \cf4 to\cf3  \cf5 dlm\cf3 \
	\cf4 tell\cf3  
\i \cf4 application
\i0 \cf3  "FoldingText"\
		
\b \cf4 activate
\b0 \cf3 \
		\cf4 set\cf3  \cf5 strOutPath\cf3  \cf4 to\cf3  (\cf9 POSIX path\cf3  \cf4 of\cf3  \'ac\
			(
\b \cf7 choose file name
\b0 \cf3  \cf7 with prompt\cf3  \cf5 pTitle\cf3  \cf7 default name\cf3  \cf5 strStem\cf3  & "." & \cf5 strExtn\cf3  \cf7 default location\cf3  \cf5 strOutFolder\cf3 ))\
	\cf4 end\cf3  \cf4 tell\cf3 \
	\cf5 WriteText2Path\cf3 (\cf5 strText\cf3 , \cf5 strOutPath\cf3 )\
\cf4 end\cf3  \cf5 ChooseFilePathAndSave\cf3 \
\
\cf4 on\cf3  \cf5 WriteText2Path\cf3 (\cf5 strText\cf3 , \cf5 strPosixPath\cf3 )\
	\cf4 set\cf3  \cf5 f\cf3  \cf4 to\cf3  (
\i \cf7 POSIX file
\i0 \cf3  \cf5 strPosixPath\cf3 )\
	
\b \cf7 open for access
\b0 \cf3  \cf5 f\cf3  \cf4 with\cf3  \cf7 write permission\cf3 \
	
\b \cf7 write
\b0 \cf3  \cf5 strText\cf3  \cf7 as\cf3  \'ab
\i \cf4 class
\i0 \cf3  utf8\'bb \cf7 to\cf3  \cf5 f\cf3 \
	
\b \cf7 close access
\b0 \cf3  \cf5 f\cf3 \
\cf4 end\cf3  \cf5 WriteText2Path\cf3 \
}